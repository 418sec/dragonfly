# Allow the metal piece to run in isolation
require(File.dirname(__FILE__) + "/../../config/environment") unless defined?(Rails)
require 'imagetastic'

# Configuration of the Imagetastic App
Imagetastic::App[:<%= app_name %>].configure do |c|
  c.datastore = Imagetastic::DataStorage::FileDataStore.new
  c.analyser do |a|
    a.register(Imagetastic::Analysis::RMagickAnalyser)
  end
  c.processor do |p|
    p.register(Imagetastic::Processing::RMagickProcessor)
  end
  c.encoder = Imagetastic::Encoding::RMagickEncoder.new
  c.parameters do |p|
    p.default_mime_type = 'image/jpeg'
    p.add_shortcut(/^\d+x\d+|^\d+x|^x\d+/) do |geometry|
      {
        :processing_method => :resize,
        :processing_options => {:geometry => geometry},
      }
    end
  end
  c.url_handler do |u|
    u.protect_from_dos_attacks = true
    u.path_prefix = '/<%= path_prefix %>'
  end
end

# Register the app with ActiveRecord, so that
# we have access to generated accessors
ActiveRecord::Base.register_imagetastic_app(:<%= accessor_prefix %>, Imagetastic::App[:<%= app_name %>])

# The metal class, for running the app
class <%= metal_name %>
  def self.call(env)
    if env["PATH_INFO"] =~ /^\/<%= path_prefix %>/
      Imagetastic::App[:<%= app_name %>].call(env)
    else
      [404, {"Content-Type" => "text/html"}, ["Not Found"]]
    end
  end
end
